// <auto-generated />
using System;
using EvaluacionCore.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Workflow.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221025211356_relacionesDb")]
    partial class relacionesDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Canal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoCanal")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigoCanal")
                        .HasColumnOrder(2);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("AS_Canal", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias")
                        .HasColumnOrder(7);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("apellidos")
                        .HasColumnOrder(6);

                    b.Property<string>("Celular")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("celular")
                        .HasColumnOrder(11);

                    b.Property<Guid?>("ClientePadreId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("clientePadreId")
                        .HasColumnOrder(22);

                    b.Property<string>("CodigoConvivencia")
                        .HasColumnType("varchar")
                        .HasColumnName("codigoConvivencia")
                        .HasColumnOrder(2);

                    b.Property<string>("CodigoIntegracion")
                        .HasColumnType("varchar")
                        .HasColumnName("codigoIntegracion")
                        .HasColumnOrder(1);

                    b.Property<string>("Correo")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("correo")
                        .HasColumnOrder(14);

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion")
                        .HasColumnOrder(10);

                    b.Property<string>("DispositivoId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dispositivoId")
                        .HasColumnOrder(20);

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(19);

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaNacimiento")
                        .HasColumnOrder(15);

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaRegistro")
                        .HasColumnOrder(17);

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("genero")
                        .HasColumnOrder(16);

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion")
                        .HasColumnOrder(4);

                    b.Property<string>("IndentificacionFamiliar")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("indentificacionFamiliar")
                        .HasColumnOrder(13);

                    b.Property<double>("Latitud")
                        .HasColumnType("float")
                        .HasColumnName("latitud")
                        .HasColumnOrder(8);

                    b.Property<double>("Longitud")
                        .HasColumnType("float")
                        .HasColumnName("longitud")
                        .HasColumnOrder(9);

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("varchar")
                        .HasColumnName("nombreUsuario")
                        .HasColumnOrder(23);

                    b.Property<string>("Nombres")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombres")
                        .HasColumnOrder(5);

                    b.Property<bool>("ServicioActivo")
                        .HasColumnType("bit")
                        .HasColumnName("servicioActivo")
                        .HasColumnOrder(18);

                    b.Property<string>("TipoIdentificacion")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tipoIdentificacion")
                        .HasColumnOrder(3);

                    b.Property<string>("TipoIdentificacionFamiliar")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tipoIdentificacionFamiliar")
                        .HasColumnOrder(12);

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Locacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(5);

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(10);

                    b.Property<string>("IdEmpresa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("idEmpresa")
                        .HasColumnOrder(2);

                    b.Property<double>("Latitud")
                        .HasMaxLength(8)
                        .HasColumnType("float")
                        .HasColumnName("latitud")
                        .HasColumnOrder(3);

                    b.Property<double>("Logintud")
                        .HasMaxLength(8)
                        .HasColumnType("float")
                        .HasColumnName("longitud")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(9);

                    b.HasKey("Id");

                    b.ToTable("AS_Locacion", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.LocacionCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("IdCliente")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("idCliente")
                        .HasColumnOrder(2);

                    b.Property<string>("IdLocacion")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("idLocacion")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("LocacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("LocacionId");

                    b.ToTable("AS_LocacionCliente", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.MarcacionCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EstadoMarcacionEntrada")
                        .HasColumnType("varchar")
                        .HasColumnName("estadoMarcacionEntrada")
                        .HasColumnOrder(5);

                    b.Property<bool>("EstadoProcesado")
                        .HasColumnType("bit")
                        .HasColumnName("estadoProcesado")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(12);

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCliente")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdLocacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idLocacion")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("LocacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MarcacionEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("marcacionEntrada")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("MarcacionSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("marcacionSalida")
                        .HasColumnOrder(4);

                    b.Property<string>("SalidaEntrada")
                        .HasColumnType("varchar")
                        .HasColumnName("estadoMarcacionSalida")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("TotalAtraso")
                        .HasColumnType("datetime2")
                        .HasColumnName("totalAtraso")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(9);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(11);

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("LocacionId");

                    b.ToTable("AS_MarcacionCliente", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.SubTurno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoSubturno")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoSubturno")
                        .HasColumnOrder(3);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("Entrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("entrada")
                        .HasColumnOrder(5);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(10);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(12);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(14);

                    b.Property<Guid>("IdTipoSubturno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoSubturno")
                        .HasColumnOrder(1);

                    b.Property<Guid>("IdTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTurno")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("MargenEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("margenEntrada")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("MargenSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("margenSalida")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("Salida")
                        .HasColumnType("datetime2")
                        .HasColumnName("salida")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("TipoSubTurnoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TotalHoras")
                        .HasColumnType("varchar")
                        .HasColumnName("totalHoras")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("TurnoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(11);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(13);

                    b.HasKey("Id");

                    b.HasIndex("TipoSubTurnoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("AS_Subturno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.SubTurnoCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCliente")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdSubturno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idSubturno")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("SubTurnoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("SubTurnoId");

                    b.ToTable("AS_SubTurnoCliente", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.TipoSubTurno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoSubturno")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoSubturno")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("AS_TipoSubTurno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.TipoTurno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoTurno")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoTurno")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("AS_TipoTurno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Turno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoIntegracion")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoIntegracion")
                        .HasColumnOrder(3);

                    b.Property<string>("CodigoTurno")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoTurno")
                        .HasColumnOrder(2);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("Entrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("entrada")
                        .HasColumnOrder(5);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(10);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(12);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(14);

                    b.Property<Guid>("IdTipoTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoTurno")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("MargenEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("margenEntrada")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("MargenSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("margenSalida")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("Salida")
                        .HasColumnType("datetime2")
                        .HasColumnName("salida")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("TipoSubTurnoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TotalHoras")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("totalHoras")
                        .HasColumnOrder(9);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(11);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(13);

                    b.HasKey("Id");

                    b.HasIndex("TipoSubTurnoId");

                    b.ToTable("AS_Turno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.LocacionCliente", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Cliente", "Cliente")
                        .WithMany("LocacionClientes")
                        .HasForeignKey("ClienteId");

                    b.HasOne("EvaluacionCore.Domain.Entities.Locacion", "Locacion")
                        .WithMany("LocacionClientes")
                        .HasForeignKey("LocacionId");

                    b.Navigation("Cliente");

                    b.Navigation("Locacion");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.MarcacionCliente", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Cliente", "Cliente")
                        .WithMany("MarcacionClientes")
                        .HasForeignKey("ClienteId");

                    b.HasOne("EvaluacionCore.Domain.Entities.Locacion", "Locacion")
                        .WithMany("MarcacionClientes")
                        .HasForeignKey("LocacionId");

                    b.Navigation("Cliente");

                    b.Navigation("Locacion");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.SubTurno", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.TipoSubTurno", "TipoSubTurno")
                        .WithMany("SubTurnos")
                        .HasForeignKey("TipoSubTurnoId");

                    b.HasOne("EvaluacionCore.Domain.Entities.Turno", "Turno")
                        .WithMany("SubTurnos")
                        .HasForeignKey("TurnoId");

                    b.Navigation("TipoSubTurno");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.SubTurnoCliente", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Cliente", "Cliente")
                        .WithMany("SubTurnoClientes")
                        .HasForeignKey("ClienteId");

                    b.HasOne("EvaluacionCore.Domain.Entities.SubTurno", "SubTurno")
                        .WithMany("SubTurnoClientes")
                        .HasForeignKey("SubTurnoId");

                    b.Navigation("Cliente");

                    b.Navigation("SubTurno");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Turno", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.TipoTurno", "TipoSubTurno")
                        .WithMany("Turnos")
                        .HasForeignKey("TipoSubTurnoId");

                    b.Navigation("TipoSubTurno");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("LocacionClientes");

                    b.Navigation("MarcacionClientes");

                    b.Navigation("SubTurnoClientes");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Locacion", b =>
                {
                    b.Navigation("LocacionClientes");

                    b.Navigation("MarcacionClientes");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.SubTurno", b =>
                {
                    b.Navigation("SubTurnoClientes");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.TipoSubTurno", b =>
                {
                    b.Navigation("SubTurnos");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.TipoTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Turno", b =>
                {
                    b.Navigation("SubTurnos");
                });
#pragma warning restore 612, 618
        }
    }
}
