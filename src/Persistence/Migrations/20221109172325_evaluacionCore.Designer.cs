// <auto-generated />
using System;
using EvaluacionCore.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Workflow.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221109172325_evaluacionCore")]
    partial class evaluacionCore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.ClaseTurno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoClaseturno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoClaseTurno")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("A");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("AS_ClaseTurno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Localidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(2);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(5);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(8)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(10);

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa")
                        .HasColumnOrder(1);

                    b.Property<double>("Latitud")
                        .HasMaxLength(8)
                        .HasColumnType("float")
                        .HasColumnName("latitud")
                        .HasColumnOrder(3);

                    b.Property<double>("Longitud")
                        .HasMaxLength(8)
                        .HasColumnType("float")
                        .HasColumnName("longitud")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(9);

                    b.HasKey("Id");

                    b.ToTable("AS_Localidad", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.LocalidadColaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<Guid>("IdColaborador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idColaborador")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdLocaliad")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idLocalidad")
                        .HasColumnOrder(1);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdLocaliad");

                    b.ToTable("AS_LocalidadColaborador", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.MarcacionColaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("EstadoMarcacionEntrada")
                        .HasColumnType("varchar")
                        .HasColumnName("estadoMarcacionEntrada")
                        .HasColumnOrder(9);

                    b.Property<bool>("EstadoProcesado")
                        .HasColumnType("bit")
                        .HasColumnName("estadoProcesado")
                        .HasColumnOrder(12);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(14)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(16);

                    b.Property<Guid>("IdLocalidadColaborador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idLocalidadColaborador")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdTurnoColaborador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTurnoCliente")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("MarcacionEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("marcacionEntrada")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("MarcacionSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("marcacionSalida")
                        .HasColumnOrder(6);

                    b.Property<string>("MargenEntradaPosterior")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("margenEntradaPosterior")
                        .HasColumnOrder(5);

                    b.Property<string>("MargenEntradaPrevio")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("margenEntradaPrevio")
                        .HasColumnOrder(4);

                    b.Property<string>("MargenSalidaPosterior")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("margenSalidaPosterior")
                        .HasColumnOrder(8);

                    b.Property<string>("MargenSalidaPrevio")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("margenSalidaPrevio")
                        .HasColumnOrder(7);

                    b.Property<string>("SalidaEntrada")
                        .HasColumnType("varchar")
                        .HasColumnName("estadoMarcacionSalida")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("TotalAtraso")
                        .HasColumnType("datetime2")
                        .HasColumnName("totalAtraso")
                        .HasColumnOrder(11);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(13);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(15);

                    b.HasKey("Id");

                    b.HasIndex("IdLocalidadColaborador");

                    b.HasIndex("IdTurnoColaborador");

                    b.ToTable("AS_MarcacionColaborador", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.SubclaseTurno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoSubclaseTurno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoSubclase")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("A");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("AS_SubclaseTurno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TipoTurno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoTurno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoTurno")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("A");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("AS_TipoTurno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Turno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoIntegracion")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoIntegracion")
                        .HasColumnOrder(8);

                    b.Property<string>("CodigoTurno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoTurno")
                        .HasColumnOrder(7);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("Entrada")
                        .HasColumnType("datetime")
                        .HasColumnName("entrada")
                        .HasColumnOrder(10);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(15)
                        .HasDefaultValueSql("A");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(17)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(19);

                    b.Property<Guid>("IdClaseTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idClaseTurno")
                        .HasColumnOrder(3);

                    b.Property<Guid>("IdMidalidadJornada")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idModalidadJornada")
                        .HasColumnOrder(6);

                    b.Property<Guid>("IdSubclaseTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idSubclaseTurno")
                        .HasColumnOrder(4);

                    b.Property<Guid>("IdTipoJornada")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoJornada")
                        .HasColumnOrder(5);

                    b.Property<Guid>("IdTipoTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoTurno")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("IdTurnoPadre")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTurnoPadre")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("MargenEntrada")
                        .HasColumnType("datetime")
                        .HasColumnName("margenEntrada")
                        .HasColumnOrder(12);

                    b.Property<DateTime>("MargenSalida")
                        .HasColumnType("datetime")
                        .HasColumnName("margenSalida")
                        .HasColumnOrder(13);

                    b.Property<DateTime>("Salida")
                        .HasColumnType("datetime")
                        .HasColumnName("salida")
                        .HasColumnOrder(11);

                    b.Property<string>("TotalHoras")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("totalHoras")
                        .HasColumnOrder(14);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(16);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(18);

                    b.HasKey("Id");

                    b.HasIndex("IdClaseTurno");

                    b.HasIndex("IdSubclaseTurno");

                    b.HasIndex("IdTipoTurno");

                    b.ToTable("AS_Turno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TurnoColaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<Guid>("IdColaborador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idColaborador")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTurno")
                        .HasColumnOrder(1);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdTurno");

                    b.ToTable("AS_TurnoColaborador", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Common.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias")
                        .HasColumnOrder(7);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("apellidos")
                        .HasColumnOrder(6);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("celular")
                        .HasColumnOrder(11);

                    b.Property<Guid?>("ClientePadreId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("clientePadreId")
                        .HasColumnOrder(22);

                    b.Property<string>("CodigoConvivencia")
                        .HasColumnType("varchar")
                        .HasColumnName("codigoConvivencia")
                        .HasColumnOrder(2);

                    b.Property<string>("CodigoIntegracion")
                        .HasColumnType("varchar")
                        .HasColumnName("codigoIntegracion")
                        .HasColumnOrder(1);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("correo")
                        .HasColumnOrder(14);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion")
                        .HasColumnOrder(10);

                    b.Property<string>("DispositivoId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dispositivoId")
                        .HasColumnOrder(20);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(19);

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaNacimiento")
                        .HasColumnOrder(15);

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaRegistro")
                        .HasColumnOrder(17)
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("genero")
                        .HasColumnOrder(16);

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion")
                        .HasColumnOrder(4);

                    b.Property<string>("IndentificacionFamiliar")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("indentificacionFamiliar")
                        .HasColumnOrder(13);

                    b.Property<double>("Latitud")
                        .HasColumnType("float")
                        .HasColumnName("latitud")
                        .HasColumnOrder(8);

                    b.Property<double>("Longitud")
                        .HasColumnType("float")
                        .HasColumnName("longitud")
                        .HasColumnOrder(9);

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("varchar")
                        .HasColumnName("nombreUsuario")
                        .HasColumnOrder(23);

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombres")
                        .HasColumnOrder(5);

                    b.Property<bool>("ServicioActivo")
                        .HasColumnType("bit")
                        .HasColumnName("servicioActivo")
                        .HasColumnOrder(18);

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tipoIdentificacion")
                        .HasColumnOrder(3);

                    b.Property<string>("TipoIdentificacionFamiliar")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tipoIdentificacionFamiliar")
                        .HasColumnOrder(12);

                    b.HasKey("Id");

                    b.ToTable("CL_Cliente", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.LocalidadColaborador", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Common.Cliente", "Colaborador")
                        .WithMany("LocalidadColaboradores")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.Localidad", "Localidad")
                        .WithMany("LocalidadColaboradores")
                        .HasForeignKey("IdLocaliad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.MarcacionColaborador", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.LocalidadColaborador", "LocalidadColaborador")
                        .WithMany("MarcacionColaboradores")
                        .HasForeignKey("IdLocalidadColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.TurnoColaborador", "TurnoColaborador")
                        .WithMany("MarcacionColaboradores")
                        .HasForeignKey("IdTurnoColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalidadColaborador");

                    b.Navigation("TurnoColaborador");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Turno", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.ClaseTurno", "ClaseTurno")
                        .WithMany("Turnos")
                        .HasForeignKey("IdClaseTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.SubclaseTurno", "SubclaseTurno")
                        .WithMany("Turnos")
                        .HasForeignKey("IdSubclaseTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.TipoTurno", "TipoTurno")
                        .WithMany("Turnos")
                        .HasForeignKey("IdTipoTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClaseTurno");

                    b.Navigation("SubclaseTurno");

                    b.Navigation("TipoTurno");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TurnoColaborador", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Common.Cliente", "Colaborador")
                        .WithMany("TurnoColaboradores")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.Turno", "Turno")
                        .WithMany("TurnoColaboradores")
                        .HasForeignKey("IdTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.ClaseTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Localidad", b =>
                {
                    b.Navigation("LocalidadColaboradores");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.LocalidadColaborador", b =>
                {
                    b.Navigation("MarcacionColaboradores");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.SubclaseTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TipoTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Turno", b =>
                {
                    b.Navigation("TurnoColaboradores");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TurnoColaborador", b =>
                {
                    b.Navigation("MarcacionColaboradores");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Common.Cliente", b =>
                {
                    b.Navigation("LocalidadColaboradores");

                    b.Navigation("TurnoColaboradores");
                });
#pragma warning restore 612, 618
        }
    }
}
