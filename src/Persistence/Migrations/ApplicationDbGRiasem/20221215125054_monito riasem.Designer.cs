// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workflow.Persistence.Contexts;

#nullable disable

namespace Workflow.Persistence.Migrations.ApplicationDbGRiasem
{
    [DbContext(typeof(ApplicationDbGRiasemContext))]
    [Migration("20221215125054_monito riasem")]
    partial class monitoriasem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EnrolApp.Domain.Entities.Common.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CargoPadreId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cargoPadreId")
                        .HasColumnOrder(4);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(3);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(9);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar")
                        .HasColumnName("nombre")
                        .HasColumnOrder(2);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(6);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.ToTable("WF_Cargo", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Horario.CheckInOut", b =>
                {
                    b.Property<int?>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("UserId"), 1L, 1);

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKTIME");

                    b.Property<string>("CheckType")
                        .HasColumnType("varchar")
                        .HasColumnName("CHECKTYPE");

                    b.Property<int?>("LogId")
                        .HasColumnType("int")
                        .HasColumnName("LOGID");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int")
                        .HasColumnName("MachineId");

                    b.Property<string>("MemoInfo")
                        .HasColumnType("varchar")
                        .HasColumnName("Memoinfo");

                    b.Property<string>("SensorId")
                        .HasColumnType("varchar")
                        .HasColumnName("SENSORID");

                    b.Property<string>("Sn")
                        .HasColumnType("varchar")
                        .HasColumnName("sn");

                    b.Property<int?>("UserExtFmt")
                        .HasColumnType("int")
                        .HasColumnName("UserExtFmt");

                    b.Property<int?>("VerifyCode")
                        .HasColumnType("int")
                        .HasColumnName("VERIFYCODE");

                    b.Property<int?>("WorkCode")
                        .HasColumnType("int")
                        .HasColumnName("WorkCode");

                    b.HasKey("UserId");

                    b.ToTable("CHECKINOUT", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Horario.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Badgenumber")
                        .HasColumnType("nvarchar")
                        .HasColumnName("Badgenumber");

                    b.Property<string>("CreateOperator")
                        .HasColumnType("varchar")
                        .HasColumnName("create_operator");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.Property<string>("Ssn")
                        .HasColumnType("nvarchar")
                        .HasColumnName("SSN");

                    b.HasKey("UserId");

                    b.ToTable("USERINFO", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.ClaseTurno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoClaseturno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoClaseTurno")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("A");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("AS_ClaseTurno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Localidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(2);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(6);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(9)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(11);

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa")
                        .HasColumnOrder(1);

                    b.Property<double>("Latitud")
                        .HasMaxLength(8)
                        .HasColumnType("float")
                        .HasColumnName("latitud")
                        .HasColumnOrder(3);

                    b.Property<double>("Longitud")
                        .HasMaxLength(8)
                        .HasColumnType("float")
                        .HasColumnName("longitud")
                        .HasColumnOrder(4);

                    b.Property<double>("Radio")
                        .HasMaxLength(8)
                        .HasColumnType("float")
                        .HasColumnName("radio")
                        .HasColumnOrder(5);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(8);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.ToTable("AS_Localidad", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.LocalidadColaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<Guid>("IdColaborador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idColaborador")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdLocalidad")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idLocalidad")
                        .HasColumnOrder(1);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdLocalidad");

                    b.ToTable("AS_LocalidadColaborador", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.MarcacionColaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("EstadoMarcacionEntrada")
                        .HasColumnType("varchar")
                        .HasColumnName("estadoMarcacionEntrada")
                        .HasColumnOrder(5);

                    b.Property<bool>("EstadoProcesado")
                        .HasColumnType("bit")
                        .HasColumnName("estadoProcesado")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(10)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(12);

                    b.Property<Guid>("IdLocalidadColaborador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idLocalidadColaborador")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("IdTurnoColaborador")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTurnoCliente")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("MarcacionEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("marcacionEntrada")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("MarcacionSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("marcacionSalida")
                        .HasColumnOrder(4);

                    b.Property<string>("SalidaEntrada")
                        .HasColumnType("varchar")
                        .HasColumnName("estadoMarcacionSalida")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("TotalAtraso")
                        .HasColumnType("datetime2")
                        .HasColumnName("totalAtraso")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(9);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(11);

                    b.HasKey("Id");

                    b.HasIndex("IdLocalidadColaborador");

                    b.HasIndex("IdTurnoColaborador");

                    b.ToTable("AS_MarcacionColaborador", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.SubclaseTurno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoSubclaseTurno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoSubclase")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("A");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("AS_SubclaseTurno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TipoTurno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CodigoTurno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoTurno")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("A");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(5)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(4);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("AS_TipoTurno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Turno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int?>("CodigoEntrada")
                        .HasColumnType("int")
                        .HasColumnName("codigoEntrada")
                        .HasColumnOrder(22);

                    b.Property<string>("CodigoIntegracion")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoIntegracion")
                        .HasColumnOrder(8);

                    b.Property<int?>("CodigoSalida")
                        .HasColumnType("int")
                        .HasColumnName("codigoSalida")
                        .HasColumnOrder(23);

                    b.Property<string>("CodigoTurno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoTurno")
                        .HasColumnOrder(7);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("Entrada")
                        .HasColumnType("datetime")
                        .HasColumnName("entrada")
                        .HasColumnOrder(10);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(13)
                        .HasDefaultValueSql("A");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(15)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(17);

                    b.Property<Guid>("IdClaseTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idClaseTurno")
                        .HasColumnOrder(3);

                    b.Property<Guid>("IdModalidadJornada")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idModalidadJornada")
                        .HasColumnOrder(6);

                    b.Property<Guid>("IdSubclaseTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idSubclaseTurno")
                        .HasColumnOrder(4);

                    b.Property<Guid>("IdTipoJornada")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoJornada")
                        .HasColumnOrder(5);

                    b.Property<Guid>("IdTipoTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoTurno")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("IdTurnoPadre")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTurnoPadre")
                        .HasColumnOrder(1);

                    b.Property<int?>("MargenEntradaGracia")
                        .HasColumnType("int")
                        .HasColumnName("margenEntradaGracia")
                        .HasColumnOrder(20);

                    b.Property<int?>("MargenEntradaPrevio")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("margenEntradaPrevio")
                        .HasColumnOrder(18);

                    b.Property<int?>("MargenSalidaGracia")
                        .HasColumnType("int")
                        .HasColumnName("margenSalidaGracia")
                        .HasColumnOrder(21);

                    b.Property<int?>("MargenSalidaPosterior")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("margenSalidaPosterior")
                        .HasColumnOrder(19);

                    b.Property<DateTime>("Salida")
                        .HasColumnType("datetime")
                        .HasColumnName("salida")
                        .HasColumnOrder(11);

                    b.Property<string>("TotalHoras")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("totalHoras")
                        .HasColumnOrder(12);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(14);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(16);

                    b.HasKey("Id");

                    b.HasIndex("IdClaseTurno");

                    b.HasIndex("IdSubclaseTurno");

                    b.HasIndex("IdTipoTurno");

                    b.ToTable("AS_Turno", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TurnoColaborador", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAsginacion")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(6)
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(8);

                    b.Property<Guid>("IdColaborador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idColaborador")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdTurno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTurno")
                        .HasColumnOrder(1);

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(5);

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdTurno");

                    b.ToTable("AS_TurnoColaborador", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Common.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias")
                        .HasColumnOrder(7);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("apellidos")
                        .HasColumnOrder(6);

                    b.Property<Guid>("CargoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cargoId")
                        .HasColumnOrder(21);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("celular")
                        .HasColumnOrder(11);

                    b.Property<Guid?>("ClientePadreId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("clientePadreId")
                        .HasColumnOrder(22);

                    b.Property<string>("CodigoConvivencia")
                        .HasColumnType("varchar")
                        .HasColumnName("codigoConvivencia")
                        .HasColumnOrder(2);

                    b.Property<string>("CodigoIntegracion")
                        .HasColumnType("varchar")
                        .HasColumnName("codigoIntegracion")
                        .HasColumnOrder(1);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("correo")
                        .HasColumnOrder(14);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion")
                        .HasColumnOrder(10);

                    b.Property<string>("DispositivoId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dispositivoId")
                        .HasColumnOrder(20);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(19);

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaNacimiento")
                        .HasColumnOrder(15);

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaRegistro")
                        .HasColumnOrder(17)
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("genero")
                        .HasColumnOrder(16);

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion")
                        .HasColumnOrder(4);

                    b.Property<string>("IndentificacionFamiliar")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("indentificacionFamiliar")
                        .HasColumnOrder(13);

                    b.Property<double>("Latitud")
                        .HasColumnType("float")
                        .HasColumnName("latitud")
                        .HasColumnOrder(8);

                    b.Property<double>("Longitud")
                        .HasColumnType("float")
                        .HasColumnName("longitud")
                        .HasColumnOrder(9);

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("varchar")
                        .HasColumnName("nombreUsuario")
                        .HasColumnOrder(23);

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombres")
                        .HasColumnOrder(5);

                    b.Property<bool>("ServicioActivo")
                        .HasColumnType("bit")
                        .HasColumnName("servicioActivo")
                        .HasColumnOrder(18);

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tipoIdentificacion")
                        .HasColumnOrder(3);

                    b.Property<string>("TipoIdentificacionFamiliar")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tipoIdentificacionFamiliar")
                        .HasColumnOrder(12);

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("CL_Cliente", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.EstadoTarea", b =>
                {
                    b.Property<Guid>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEstado");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("IdEstado");

                    b.ToTable("WF_EstadoTarea", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Justificacion.SolicitudJustificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int?>("CodOrganizacion")
                        .HasColumnType("int")
                        .HasColumnName("codOrganizacion");

                    b.Property<string>("Comentarios")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("comentarios");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion");

                    b.Property<Guid>("IdEstadoSolicitud")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEstadoSolicitud");

                    b.Property<int?>("IdMarcacion")
                        .HasColumnType("int")
                        .HasColumnName("idMarcacion");

                    b.Property<Guid>("IdTipoJustificacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoJustificacion");

                    b.Property<int?>("IdTurno")
                        .HasColumnType("int")
                        .HasColumnName("idTurno");

                    b.Property<string>("IdentBeneficiario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identBeneficiario");

                    b.Property<string>("IdentificacionEmpleado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identificacionEmpleado");

                    b.Property<DateTime>("MarcacionEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("marcacionEntrada");

                    b.Property<DateTime>("MarcacionSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("marcacionSalida");

                    b.Property<DateTime>("TurnoEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("turnoEntrada");

                    b.Property<DateTime>("TurnoSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("turnoSalida");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("IdEstadoSolicitud");

                    b.HasIndex("IdTipoJustificacion");

                    b.ToTable("AS_SolicitudJustificacion", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Justificacion.TipoJustificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValue("A")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("WF_TipoJustificacion", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Marcaciones.AccMonitoLogRiasem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Card_No")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_no")
                        .HasColumnOrder(11);

                    b.Property<string>("Change_Operator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("change_operator")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("Change_Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("change_time")
                        .HasColumnOrder(2);

                    b.Property<string>("Create_Operator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("create_operator")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("Create_Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasColumnOrder(4);

                    b.Property<string>("Delete_Operator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("delete_operator")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("Delete_Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("delete_time")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description")
                        .HasColumnOrder(18);

                    b.Property<int?>("Device_Id")
                        .HasColumnType("int")
                        .HasColumnName("device_id")
                        .HasColumnOrder(12);

                    b.Property<string>("Device_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("device_name")
                        .HasColumnOrder(14);

                    b.Property<string>("Device_Sn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("device_sn")
                        .HasColumnOrder(13);

                    b.Property<int?>("Event_Type")
                        .HasColumnType("int")
                        .HasColumnName("event_type")
                        .HasColumnOrder(17);

                    b.Property<int?>("Log_Tag")
                        .HasColumnType("int")
                        .HasColumnName("log_tag")
                        .HasColumnOrder(8);

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pin")
                        .HasColumnOrder(10);

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state")
                        .HasColumnOrder(16);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("time")
                        .HasColumnOrder(9);

                    b.Property<int?>("Verified")
                        .HasColumnType("int")
                        .HasColumnName("verified")
                        .HasColumnOrder(15);

                    b.HasKey("Id");

                    b.ToTable("acc_monito_log_riasem", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Marcaciones.AccMonitorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Card_No")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_no")
                        .HasColumnOrder(11);

                    b.Property<string>("Change_Operator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("change_operator")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("Change_Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("change_time")
                        .HasColumnOrder(2);

                    b.Property<string>("Create_Operator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("create_operator")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("Create_Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasColumnOrder(4);

                    b.Property<string>("Delete_Operator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("delete_operator")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("Delete_Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("delete_time")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description")
                        .HasColumnOrder(18);

                    b.Property<int?>("Device_Id")
                        .HasColumnType("int")
                        .HasColumnName("device_id")
                        .HasColumnOrder(12);

                    b.Property<string>("Device_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("device_name")
                        .HasColumnOrder(14);

                    b.Property<string>("Device_Sn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("device_sn")
                        .HasColumnOrder(13);

                    b.Property<int?>("Event_Point_Id")
                        .HasColumnType("int")
                        .HasColumnName("event_point_id")
                        .HasColumnOrder(20);

                    b.Property<string>("Event_Point_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("event_point_name")
                        .HasColumnOrder(21);

                    b.Property<int?>("Event_Point_Type")
                        .HasColumnType("int")
                        .HasColumnName("event_point_type")
                        .HasColumnOrder(19);

                    b.Property<int?>("Event_Type")
                        .HasColumnType("int")
                        .HasColumnName("event_type")
                        .HasColumnOrder(17);

                    b.Property<int?>("Log_Tag")
                        .HasColumnType("int")
                        .HasColumnName("log_tag")
                        .HasColumnOrder(8);

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pin")
                        .HasColumnOrder(10);

                    b.Property<int?>("State")
                        .HasColumnType("int")
                        .HasColumnName("state")
                        .HasColumnOrder(16);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("time")
                        .HasColumnOrder(9);

                    b.Property<int?>("Verified")
                        .HasColumnType("int")
                        .HasColumnName("verified")
                        .HasColumnOrder(15);

                    b.HasKey("Id");

                    b.ToTable("acc_monitor_log", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Permisos.SolicitudPermiso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int?>("CantidadDias")
                        .HasColumnType("int")
                        .HasColumnName("cantidadDias ");

                    b.Property<DateTime?>("CantidadHoras")
                        .HasColumnType("datetime2")
                        .HasColumnName("cantidadHoras ");

                    b.Property<int?>("CodOrganizacion")
                        .HasColumnType("int")
                        .HasColumnName("codOrganizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion ");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaDesde ");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaHasta ");

                    b.Property<string>("HoraFin")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("horaFin ");

                    b.Property<string>("HoraInicio")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("horaInicio ");

                    b.Property<int>("IdBeneficiario")
                        .HasColumnType("int")
                        .HasColumnName("idBeneficiario ");

                    b.Property<Guid>("IdEstadoSolicitud")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEstadoSolicitud");

                    b.Property<int>("IdSolicitante")
                        .HasColumnType("int")
                        .HasColumnName("idSolicitante ");

                    b.Property<Guid>("IdTipoPermiso")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoPermiso");

                    b.Property<string>("IdentificacionEmpleado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identificacionEmpleado");

                    b.Property<int>("NumeroSolicitud")
                        .HasColumnType("int")
                        .HasColumnName("numeroSolicitud ");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("observacion ");

                    b.Property<bool?>("PorHoras")
                        .HasColumnType("bit")
                        .HasColumnName("porHoras ");

                    b.HasKey("Id");

                    b.HasIndex("IdEstadoSolicitud");

                    b.HasIndex("IdTipoPermiso");

                    b.ToTable("AS_SolicitudPermiso", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Permisos.TipoPermiso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValue("A")
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.ToTable("WF_TipoPermiso", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Vacaciones.SolicitudVacacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("CantidadDias")
                        .HasColumnType("int")
                        .HasColumnName("cantidadDias");

                    b.Property<int?>("CodOrganizacion")
                        .HasColumnType("int")
                        .HasColumnName("codOrganizacion");

                    b.Property<string>("CodigoEmpleadoReemplazo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codigoEmpleadoReemplazo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaDesde");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaHasta");

                    b.Property<int>("IdBeneficiario")
                        .HasColumnType("int")
                        .HasColumnName("idBeneficiario");

                    b.Property<Guid>("IdEstadoSolicitud")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEstadoSolicitud");

                    b.Property<int>("IdSolicitante")
                        .HasColumnType("int")
                        .HasColumnName("idSolicitante");

                    b.Property<Guid>("IdTipoSolicitud")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoSolicitud");

                    b.Property<string>("IdentificacionEmpleado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identificacionEmpleado");

                    b.Property<int>("NumeroSolicitud")
                        .HasColumnType("int")
                        .HasColumnName("numeroSolicitud");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("observacion");

                    b.Property<Guid?>("TipoPermisoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdEstadoSolicitud");

                    b.HasIndex("TipoPermisoId");

                    b.ToTable("AS_SolicitudVacacion", "dbo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.LocalidadColaborador", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Common.Cliente", "Colaborador")
                        .WithMany("LocalidadColaboradores")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.Localidad", "Localidad")
                        .WithMany("LocalidadColaboradores")
                        .HasForeignKey("IdLocalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.MarcacionColaborador", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.LocalidadColaborador", "LocalidadColaborador")
                        .WithMany("MarcacionColaboradores")
                        .HasForeignKey("IdLocalidadColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.TurnoColaborador", "TurnoColaborador")
                        .WithMany("MarcacionColaboradores")
                        .HasForeignKey("IdTurnoColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalidadColaborador");

                    b.Navigation("TurnoColaborador");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Turno", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.ClaseTurno", "ClaseTurno")
                        .WithMany("Turnos")
                        .HasForeignKey("IdClaseTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.SubclaseTurno", "SubclaseTurno")
                        .WithMany("Turnos")
                        .HasForeignKey("IdSubclaseTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.TipoTurno", "TipoTurno")
                        .WithMany("Turnos")
                        .HasForeignKey("IdTipoTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClaseTurno");

                    b.Navigation("SubclaseTurno");

                    b.Navigation("TipoTurno");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TurnoColaborador", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.Common.Cliente", "Colaborador")
                        .WithMany("TurnoColaboradores")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Asistencia.Turno", "Turno")
                        .WithMany("TurnoColaboradores")
                        .HasForeignKey("IdTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Common.Cliente", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Common.Cargo", "Cargo")
                        .WithMany("Cliente")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Justificacion.SolicitudJustificacion", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.EstadoTarea", "EstadoTarea")
                        .WithMany("SolicitudJustificacion")
                        .HasForeignKey("IdEstadoSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Justificacion.TipoJustificacion", "TipoJustificacion")
                        .WithMany("SolicitudJustificacion")
                        .HasForeignKey("IdTipoJustificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoTarea");

                    b.Navigation("TipoJustificacion");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Permisos.SolicitudPermiso", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.EstadoTarea", "EstadoTarea")
                        .WithMany("SolicitudPermiso")
                        .HasForeignKey("IdEstadoSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Permisos.TipoPermiso", "TipoPermiso")
                        .WithMany("SolicitudPermiso")
                        .HasForeignKey("IdTipoPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoTarea");

                    b.Navigation("TipoPermiso");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Vacaciones.SolicitudVacacion", b =>
                {
                    b.HasOne("EvaluacionCore.Domain.Entities.EstadoTarea", "EstadoTarea")
                        .WithMany("SolicitudVacaion")
                        .HasForeignKey("IdEstadoSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionCore.Domain.Entities.Permisos.TipoPermiso", "TipoPermiso")
                        .WithMany()
                        .HasForeignKey("TipoPermisoId");

                    b.Navigation("EstadoTarea");

                    b.Navigation("TipoPermiso");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Common.Cargo", b =>
                {
                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.ClaseTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Localidad", b =>
                {
                    b.Navigation("LocalidadColaboradores");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.LocalidadColaborador", b =>
                {
                    b.Navigation("MarcacionColaboradores");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.SubclaseTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TipoTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.Turno", b =>
                {
                    b.Navigation("TurnoColaboradores");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Asistencia.TurnoColaborador", b =>
                {
                    b.Navigation("MarcacionColaboradores");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Common.Cliente", b =>
                {
                    b.Navigation("LocalidadColaboradores");

                    b.Navigation("TurnoColaboradores");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.EstadoTarea", b =>
                {
                    b.Navigation("SolicitudJustificacion");

                    b.Navigation("SolicitudPermiso");

                    b.Navigation("SolicitudVacaion");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Justificacion.TipoJustificacion", b =>
                {
                    b.Navigation("SolicitudJustificacion");
                });

            modelBuilder.Entity("EvaluacionCore.Domain.Entities.Permisos.TipoPermiso", b =>
                {
                    b.Navigation("SolicitudPermiso");
                });
#pragma warning restore 612, 618
        }
    }
}
